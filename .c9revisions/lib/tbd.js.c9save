{"ts":1343446476673,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"(function () {\n    'use strict';\n    var hasOwnProp = Object.prototype.hasOwnProperty,\n        tbd;\n\n    function ValueBuilder(def, builder) {\n        var value = def,\n            self = this;\n        this.build = function () {\n            if (typeof value === 'function') {\n                return value();\n            } else if (typeof value === 'object' && value) {\n                if (value.constructor === Array) {\n                    return value.slice();\n                }\n\n                return tbd.from(value).make(1)[0];\n            }\n            return value;\n        };\n\n        this.use = function (data) {\n            value = data;\n            return self;\n        };\n\n        this.make = function (num) {\n            return builder.make(num);\n        };\n\n        this.done = function () {\n            return builder;\n        };\n    }\n\n    function ObjectBuilder(schema) {\n        var i, ctorArgs,\n            props = {},\n            self = this,\n            source = schema;\n\n        function parseSchema() {\n            var i;\n            for (i in schema) {\n                if (!hasOwnProp.call(schema, i) || hasOwnProp.call(props, i)) continue;\n\n                props[i] = {\n                    value: new ValueBuilder(schema[i], self)\n                };\n            }            \n        }\n\n        if(typeof source !== 'function') {\n            parseSchema();\n        } else {\n            this.constructWith = function() {\n                ctorArgs = [].slice.call(arguments);\n                return self;\n            };\n        }\n\n        this.make = function (num) {\n            var o, j,\n                ret = [];\n                \n            for (i = 0; i < num; i++) {\n                o = {};\n                if(typeof source === 'function') {\n                    if(ctorArgs) {\n                        schema = {};\n                        source.apply(schema, ctorArgs);\n                    } else {\n                        schema = new source();\n                    }\n                    parseSchema();\n                    o.constructor = source;\n                }\n\n                for (j in props) {\n                    o[j] = props[j].value.build();\n                }\n                ret.push(o);\n            }\n\n            return ret;\n        };\n\n        this.prop = function (propName) {\n            if (!props[propName]) {\n                props[propName] = {\n                    value: new ValueBuilder(null, self)\n                };\n            }\n\n            return props[propName].value;\n        };\n    }\n\n    tbd = this.tbd = {\n        from: function (schema) {\n            return new ObjectBuilder(schema);\n        }\n    };\n}).call(this);\n\n(function() {\n    'use strict';\n    var utils = {};\n    \n    utils.random = function () {\n        var args = [].slice.call(arguments);\n        \n        return function () {\n            var random = Math.random();\n            \n            return args[Math.floor(random * args.length)];\n        };\n    };\n    \n    utils.range = function (min, max) {\n        return function () {\n            var random = Math.random();\n            var val = Math.floor(random * (max - min + 1) + min);\n            if(min.constructor === Date || max === Date) {\n                val = Math.floor(random * (max.getTime() - min.getTime()));\n                return new Date(max.getTime() - val);\n            } else {\n                return val;\n            }\n        };\n    };\n    \n    utils.sequential = function(start) {\n        if (start.constructor === Number) {\n            return function () {\n                return start++;\n            };\n        } else if (start.constructor === String) {\n            var letters = 'abcdefghijklmnopqrstuvwxyz'.split('');\n            if (start.length === 1) {\n                start = letters.indexOf(start);\n                return function () {\n                    if (start === letters.length) {\n                        start = 0;\n                    }\n                    return letters[start++];\n                };                \n            } else {\n                var index = -1;\n                return function () {\n                    if (index === -1) {\n                        index++;\n                        return start;\n                    }\n                    return start + letters[index++];\n                };\n            }\n        } else if (start.constructor === Date) {\n            var dateType = arguments[1] || 'd',\n                inc = 0;\n            return function () {\n                start = new Date(start.getFullYear(), start.getMonth(), start.getDate(), start.getHours(), start.getMinutes(), start.getSeconds(), start.getMilliseconds());\n                switch(dateType) {\n                    case 'y':\n                        start.setFullYear(start.getFullYear() + inc);\n                        break;\n                    case 'M':\n                        start.setMonth(start.getMonth() + inc);\n                        break;\n                    case 'd':\n                        start.setDate(start.getDate() + inc);\n                        break;\n                    case 'h':\n                        start.setHours(start.getHours() + inc);\n                        break;\n                    case 'm':\n                        start.setMinutes(start.getMinutes() + inc);\n                        break;\n                    case 's':\n                        start.setSeconds(start.getSeconds() + inc);\n                        break;\n                    default:\n                        throw 'The value ' + dateType + ' is not an understood date part';\n                }\n                inc = inc || 1;\n                return start;\n            };\n        } else {\n            throw 'This type is not supported for sequential values at the moment';\n        }\n    };\n    \n    this.tbd.utils = utils;\n}).call(this);"]],"start1":0,"start2":0,"length1":0,"length2":5842}]],"length":5842}
